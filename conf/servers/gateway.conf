

server {
    listen       10000 default_server;
    server_name  _;

    access_log  logs/gateway-access.log json_log;

    location = /nginx_status {
        allow 127.0.0.0/24;
        allow 192.168.0.0/24;
        deny all;
        access_log off;
        stub_status;
    }

    location /admin {
        access_log  logs/admin-access.log;

        allow 127.0.0.0/24;
        allow 192.168.0.0/24;
        deny all;

        content_by_lua_block {
            local admin = require("admin")
            admin.http_admin()
        }
    }

    location /dashboard {
        access_log  logs/admin-access.log;
        allow 127.0.0.0/24;
        allow 192.168.0.0/24;
        deny all;

        alias dashboard/;
        try_files $uri $uri/index.html /index.html;
    }

    location / {
        include common/proxy.conf;
        set $target_service_name '';
        set $origin_uri $uri;
        lua_code_cache on;
        rewrite_by_lua_block {
            local app = require("app")
            app.http_rewrite()
        }
        access_by_lua_block {
            local app = require("app")
            app.http_access()
        }
        content_by_lua_block {
            local app = require("app")
            app.http_content()
        }
        header_filter_by_lua_block {
            local app = require("app")
            app.http_header_filter()
        }
        body_filter_by_lua_block {
            local app = require("app")
            app.http_body_filter()
        }
        log_by_lua_block {
            local app = require("app")
            app.http_log()
        }

        proxy_pass http://backend_server;
    }

}

upstream backend_server {
    # just an invalid address as a place holder
    server 0.0.0.0;
    balancer_by_lua_block {
        local app = require("app")
        app.http_balancer()
    }
    # connection pool
    keepalive 100;
    keepalive_timeout 60s;
}
